services:
  elasticsearch:
    image: elasticsearch:8.13.4
    container_name: elasticsearch 
    ports:
      - "9200:9200"
    environment:
      ELASTIC_PASSWORD: "user42"
    # volumes:
    #   - ./ssl:/usr/share/elasticsearch/config/certs
    # working_dir: /usr/share/elasticsearch/config
     
  logstash:
    image: logstash:8.13.4
    container_name: logstash
    ports:
      - "12201:12201/udp"
      - "5044:5044"
    volumes:
      - ./pipeline:/usr/share/logstash/pipeline
      - ./ssl:/etc/logstash/config/certs
    depends_on:
      - elasticsearch
    environment:
      xpack.monitoring.enabled: true
      xpack.monitoring.elasticsearch.username: elastic
      xpack.monitoring.elasticsearch.password: user42
      xpack.monitoring.elasticsearch.hosts: https://elasticsearch:9200
      xpack.monitoring.elasticsearch.ssl.certificate_authority: /etc/logstash/config/certs/http_ca.crt
      xpack.monitoring.elasticsearch.ssl.verification_mode: none

    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:user42 -k https://elasticsearch:9200/ || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  kibana:
    image: kibana:8.13.4
    container_name: kibana
    environment:
      elasticsearch.hosts: "https://elasticsearch:9200"
      server.ssl.enabled: true
      server.ssl.keystore.path: /usr/share/kibana/config/certs/http.p12
      server.ssl.keystore.password: user42
      elasticsearch.ssl.certificateAuthorities: /usr/share/kibana/config/certs/http_ca.crt
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    volumes:
      - ./ssl:/usr/share/kibana/config/certs

  db:
    build: src/db
    container_name: db
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql -h db -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1'"
        ]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - ./log/db:/var/log/postgresql
    logging:
      driver: "syslog"
      options:
       syslog-address: "tcp://localhost:5044"
    depends_on:
      logstash:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "${WORKDIR_LOCAL}/src:/app"
    logging:
      driver: "syslog"
      options:
       syslog-address: "tcp://localhost:5044"

  es-init:
    image: curlimages/curl:8.8.0
    container_name: es-init
    depends_on:
      - elasticsearch
    entrypoint: /usr/share/elasticsearch/config/init-es.sh
    volumes:
      - ./init-es.sh:/usr/share/elasticsearch/config/init-es.sh
