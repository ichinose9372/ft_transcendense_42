networks:
  tra:
    driver: bridge

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    networks:
      - tra

  # logstash:
  #   image: docker.elastic.co/logstash/logstash-oss:6.2.4
  #   container_name: logstash
  #   ports:
  #     - "5044:5044"
  #   volumes:
  #     - ./pipeline:/usr/share/logstash/pipeline
  #   networks:
  #     - tra
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://elasticsearch:9200 || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
    


  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - tra
    

  db:
    build: src/db
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "psql -h db -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1'"]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - ./log/db:/var/log/postgresql
    logging:
      driver: "json-file"
    # depends_on:
    #   - logstash
    networks:
      - tra
    

  backend:
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "${WORKDIR_LOCAL}/src:/app"
    logging:
      driver: "json-file"
    networks:
      - tra
    