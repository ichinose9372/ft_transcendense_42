services:
  elasticsearch:
    image: elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: user42
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/elastic-certificates/elasticsearch/elasticsearch.key
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/elastic-certificates/elasticsearch/elasticsearch.crt
      xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/elastic-stack-ca/ca/ca.crt
    ports:
      - "9200:9200"
    volumes:
      - ./elastic-certificates:/usr/share/elasticsearch/config/elastic-certificates
      - ./elastic-stack-ca:/usr/share/elasticsearch/config/elastic-stack-ca
      - ./init-es.sh:/usr/share/elasticsearch/init-es.sh
    

  logstash:
    image: logstash:8.13.4
    container_name: logstash
    ports:
      - "12201:12201/udp"
      - "5044:5044"
    volumes:
      - ./pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    environment:
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=user42
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://elasticsearch:9200/ || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5

  kibana:
    image: kibana:8.13.4
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: https://elasticsearch:9200
      # ELASTICSEARCH_USERNAME: elastic
      # ELASTICSEARCH_PASSWORD: user42
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  db:
    build: src/db
    container_name: db
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql -h db -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1'"
        ]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - ./log/db:/var/log/postgresql
    logging:
      driver: "syslog"
      options:
       syslog-address: "tcp://localhost:5044"
    depends_on:
      logstash:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "${WORKDIR_LOCAL}/src:/app"
    logging:
      driver: "syslog"
      options:
       syslog-address: "tcp://localhost:5044"

  es-init:
    image: curlimages/curl:8.8.0
    container_name: es-init
    depends_on:
      - elasticsearch
    entrypoint: /usr/share/elasticsearch/config/init-es.sh
    volumes:
      - ./init-es.sh:/usr/share/elasticsearch/config/init-es.sh
